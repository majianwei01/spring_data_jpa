<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">


    <!-- 创建securityManager这个核心对象 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 设置一个realm进去 -->
        <property name="realm" ref="martsellRealm"/>
    </bean>
    <!-- 被引用的realm(一定会写一个自定义realm) -->
    <bean id="martsellRealm" class="com.majianwei.shiro.SmartsellRealm">
        <!-- 为这个realm设置相应的匹配器 -->
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <!-- 设置加密方式 -->
                <property name="hashAlgorithmName" value="MD5"/>
                <!-- 设置加密次数 -->
                <property name="hashIterations" value="9" />
            </bean>
        </property>
    </bean>

    <!--  可以让咱们的权限判断支持【注解】方法 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>


    <!--  真正实现权限的过滤器 它的id名称和web.xml中的过滤器名称一样 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- 登录路径:如果没有登录，就会跳到这里来 -->
        <property name="loginUrl" value="/login"/>
        <!-- 登录成功后的跳转路径 -->
        <property name="successUrl" value="/main"/>
        <!-- 没有权限跳转的路径 -->
        <property name="unauthorizedUrl" value="/s/unauthorized.jsp"/>
        <!--
            anon:这个路径不需要登录也可以访问
            authc:需要登录才可以访问
            perms[depts:index]:做权限拦截
                咱们以后哪些访问有权限拦截,需要从数据库中读取
        -->

        <!--<property name="filterChainDefinitions">-->
            <!--<value>-->
                <!--/login = anon-->
                <!--/easyui/** = anon-->
                <!--&lt;!&ndash;/s/permission.jsp = perms[user:index]&ndash;&gt;-->
                <!--&lt;!&ndash;/depts/index = perms[depts:index]&ndash;&gt;-->
                <!--/** = authc-->
            <!--</value>-->
        <!--</property>-->
        <property name="filterChainDefinitionMap" ref="filterChainDefinitionMap" ></property>

        <!--配置自定义权限过滤器，处理ajax请求发送数据报错的问题-->
        <property name="filters">
            <map>
                <entry key="smartsellPermissionsFilter" value-ref="smartsellPermissionsFilter"/>
            </map>
        </property>
    </bean>
    <bean id="smartsellPermissionsFilter" class="com.majianwei.shiro.SmartsellPermissionsFilter"></bean>

    <!-- 实例工厂设置 -->
    <bean id="filterChainDefinitionMap"
          factory-bean="filterChainDefinitionMapFactory"
          factory-method="createFilterChainDefinitionMap" />
    <!-- 创建可以拿到权限map的bean -->
    <bean id="filterChainDefinitionMapFactory" class="com.majianwei.shiro.FilterChainDefinitionMapFactory" />

    <!--引入shiro的配置文件-->

</beans>